const int nepoch = 20;



double returning_20epoch[40] = {3.547048330307007, 3.585777759552002, 3.868051052093506, 4.254715919494629, 4.695245265960693, 5.085349082946777, 5.45098876953125, 5.627472877502441, 2.6507341861724854, 2.360708236694336, 2.3268768787384033, 2.3044941425323486, 2.28653883934021, 2.2809805870056152, 2.270242214202881, 2.264465570449829, 2.2527999877929688, 2.2664644718170166, 2.2591335773468018, 2.2455523014068604, 2.5702991485595703, 2.5805160999298096, 2.610218048095703, 2.620600700378418, 2.6031548976898193, 2.60463547706604, 2.6014623641967773, 2.5602965354919434, 2.5349743366241455, 2.523686408996582, 2.521291494369507, 2.506904363632202, 2.490190267562866, 2.518873691558838, 2.460759162902832, 2.4823808670043945, 2.4455692768096924, 2.4475176334381104, 2.455188035964966, 2.4766409397125244}
double returning_25epoch[50] = {3.729863166809082, 3.5932576656341553, 3.8490777015686035, 4.238887786865234, 4.620750427246094, 5.0217604637146, 5.380268096923828, 5.603439807891846, 2.6320626735687256, 2.371767044067383, 2.3159537315368652, 2.30792498588562, 2.3192331790924072, 2.3159642219543457, 2.292168617248535, 2.2751944065093994, 2.2842745780944824, 2.2668111324310303, 2.2594871520996094, 2.2355849742889404, 2.2106611728668213, 2.236013889312744, 2.1899425983428955, 2.2297542095184326, 2.2138826847076416, 2.583883047103882, 2.569230556488037, 2.6157727241516113, 2.5643136501312256, 2.55403208732605, 2.5577664375305176, 2.5516138076782227, 2.5287563800811768, 2.494719982147217, 2.5053446292877197, 2.513950824737549, 2.480639934539795, 2.445539951324463, 2.463528871536255, 2.449195384979248, 2.458139419555664, 2.4394466876983643, 2.4495062828063965, 2.4262404441833496, 2.4253342151641846, 2.4166147708892822, 2.3972392082214355, 2.38938045501709, 2.3954825401306152, 2.3757705688476562}

TGraph *g20 = new TGraph();
TGraph *g25 = new TGraph();
g20->GetXaxis()->SetTitle("epoch"); 
g20->GetYaxis()->SetTitle("returning"); 
g20->SetLineColor(kBlue); 
// g20->SetMinimum(1); 
// g20->SetMaximum(6); 
g25->GetXaxis()->SetTitle("epoch"); 
g25->GetYaxis()->SetTitle("returning"); 
g25->SetLineColor(kRed); 

TLegend *legend = new TLegend( 0.6, 0.68, 0.8, 0.78);
legend->AddEntry( g20, "epoch=20", "l"); // AddEntry( pointer , "interpretation" , "option" )
legend->AddEntry( g25, "epoch=25", "l"); // option は　"f"=box, "l"="L"=line, "p"=marker
legend->SetFillColor(0);


for(int i=0;i<50;i++){
  if(i<40) g20->SetPoint(i,i,returning_20epoch[i]);
  g25->SetPoint(i,i,returning_25epoch[i]);
}
g25->Draw();
g20->Draw("same");

legend->Draw();
